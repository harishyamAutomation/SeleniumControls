<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="63" total="122" passed="57" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-18T04:40:01 IST" name="SeleniumControls : RegressionTest" finished-at="2024-12-18T04:51:11 IST" duration-ms="670151">
    <groups>
      <group name="somkeTest">
        <method signature="Index.verifyAllElements()[pri:2, instance:com.ui.test.testHeroku.Index@6b85300e]" name="verifyAllElements" class="com.ui.test.testHeroku.Index"/>
      </group> <!-- somkeTest -->
    </groups>
    <test started-at="2024-12-18T04:40:01 IST" name="Regression" finished-at="2024-12-18T04:51:11 IST" duration-ms="670151">
      <class name="com.ui.test.testHeroku.ChallengingDOM">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:21 IST" name="beforeClass" finished-at="2024-12-18T04:41:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="openChallengingDOmPage()[pri:2, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:21 IST" name="openChallengingDOmPage" description="Open challenging dom page" finished-at="2024-12-18T04:41:22 IST" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openChallengingDOmPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:21 IST" name="beforeMethod" finished-at="2024-12-18T04:41:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ChallengingDOM.openChallengingDOmPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:22 IST" name="afterMethod" finished-at="2024-12-18T04:41:32 IST" duration-ms="10110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openChallengingDOmPage status=SUCCESS method=ChallengingDOM.openChallengingDOmPage()[pri:2, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateBlueButton()[pri:3, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:32 IST" name="validateBlueButton" description="Vallidate to click blue button" finished-at="2024-12-18T04:41:33 IST" duration-ms="1527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBlueButton -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:32 IST" name="beforeMethod" finished-at="2024-12-18T04:41:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ChallengingDOM.validateBlueButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:33 IST" name="afterMethod" finished-at="2024-12-18T04:41:43 IST" duration-ms="10130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBlueButton status=SUCCESS method=ChallengingDOM.validateBlueButton()[pri:3, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateRedButton()[pri:4, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:43 IST" name="validateRedButton" description="Vallidate to click red button" finished-at="2024-12-18T04:41:45 IST" duration-ms="1670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRedButton -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:43 IST" name="beforeMethod" finished-at="2024-12-18T04:41:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ChallengingDOM.validateRedButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:45 IST" name="afterMethod" finished-at="2024-12-18T04:41:55 IST" duration-ms="10112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRedButton status=SUCCESS method=ChallengingDOM.validateRedButton()[pri:4, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateGreenButton()[pri:5, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:55 IST" name="validateGreenButton" description="Vallidate to click green button" finished-at="2024-12-18T04:41:57 IST" duration-ms="1508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGreenButton -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:55 IST" name="beforeMethod" finished-at="2024-12-18T04:41:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ChallengingDOM.validateGreenButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:41:57 IST" name="afterMethod" finished-at="2024-12-18T04:42:07 IST" duration-ms="10111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateGreenButton status=SUCCESS method=ChallengingDOM.validateGreenButton()[pri:5, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.ChallengingDOM@4d4d8fcf]" started-at="2024-12-18T04:42:07 IST" name="afterClass" finished-at="2024-12-18T04:42:08 IST" duration-ms="894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.ChallengingDOM -->
      <class name="com.ui.test.testHeroku.UploadFile">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07]" started-at="2024-12-18T04:50:48 IST" name="beforeClass" finished-at="2024-12-18T04:50:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="openUploadFilePage()[pri:2, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07]" started-at="2024-12-18T04:50:48 IST" name="openUploadFilePage" description="Open Upload File page" finished-at="2024-12-18T04:50:50 IST" duration-ms="1259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUploadFilePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07]" started-at="2024-12-18T04:50:48 IST" name="beforeMethod" finished-at="2024-12-18T04:50:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.UploadFile.openUploadFilePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07]" started-at="2024-12-18T04:50:50 IST" name="afterMethod" finished-at="2024-12-18T04:51:00 IST" duration-ms="10127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openUploadFilePage status=SUCCESS method=UploadFile.openUploadFilePage()[pri:2, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testFileUpload()[pri:3, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07]" started-at="2024-12-18T04:51:00 IST" name="testFileUpload" description="Test to upload a file" finished-at="2024-12-18T04:51:00 IST" duration-ms="10" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy21.sendKeys(Unknown Source)
at com.ui.test.testHeroku.UploadFile.testFileUpload(UploadFile.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileUpload -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07]" started-at="2024-12-18T04:51:00 IST" name="beforeMethod" finished-at="2024-12-18T04:51:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.UploadFile.testFileUpload()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07]" started-at="2024-12-18T04:51:00 IST" name="afterMethod" finished-at="2024-12-18T04:51:10 IST" duration-ms="10150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFileUpload status=FAILURE method=UploadFile.testFileUpload()[pri:3, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.UploadFile@3aaf4f07]" started-at="2024-12-18T04:51:10 IST" name="afterClass" finished-at="2024-12-18T04:51:11 IST" duration-ms="947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.UploadFile -->
      <class name="com.ui.test.testHeroku.Dropdown">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:23 IST" name="beforeClass" finished-at="2024-12-18T04:45:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:23 IST" name="beforeMethod" finished-at="2024-12-18T04:45:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Dropdown.openDropdownPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="openDropdownPage()[pri:2, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:23 IST" name="openDropdownPage" description="Open Dropdown page" finished-at="2024-12-18T04:45:24 IST" duration-ms="423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDropdownPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:24 IST" name="afterMethod" finished-at="2024-12-18T04:45:34 IST" duration-ms="10126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openDropdownPage status=SUCCESS method=Dropdown.openDropdownPage()[pri:2, instance:com.ui.test.testHeroku.Dropdown@4ced35ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="selectOpion1()[pri:3, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:34 IST" name="selectOpion1" description="Select first value from dropdown" finished-at="2024-12-18T04:45:34 IST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOpion1 -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:34 IST" name="beforeMethod" finished-at="2024-12-18T04:45:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Dropdown.selectOpion1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:34 IST" name="afterMethod" finished-at="2024-12-18T04:45:44 IST" duration-ms="10119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOpion1 status=SUCCESS method=Dropdown.selectOpion1()[pri:3, instance:com.ui.test.testHeroku.Dropdown@4ced35ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:44 IST" name="beforeMethod" finished-at="2024-12-18T04:45:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Dropdown.selectOpion2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="selectOpion2()[pri:4, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:44 IST" name="selectOpion2" description="Select second value from dropdown" finished-at="2024-12-18T04:45:44 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectOpion2 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:44 IST" name="afterMethod" finished-at="2024-12-18T04:45:54 IST" duration-ms="10117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectOpion2 status=SUCCESS method=Dropdown.selectOpion2()[pri:4, instance:com.ui.test.testHeroku.Dropdown@4ced35ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.Dropdown@4ced35ed]" started-at="2024-12-18T04:45:54 IST" name="afterClass" finished-at="2024-12-18T04:45:55 IST" duration-ms="839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.Dropdown -->
      <class name="com.ui.test.testHeroku.DisappearingElements">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:31 IST" name="beforeClass" finished-at="2024-12-18T04:43:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:31 IST" name="beforeMethod" finished-at="2024-12-18T04:43:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DisappearingElements.openDisAppElementPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="openDisAppElementPage()[pri:2, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:31 IST" name="openDisAppElementPage" description="Open Disappearing element page" finished-at="2024-12-18T04:43:32 IST" duration-ms="436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDisAppElementPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:32 IST" name="afterMethod" finished-at="2024-12-18T04:43:42 IST" duration-ms="10094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openDisAppElementPage status=SUCCESS method=DisappearingElements.openDisAppElementPage()[pri:2, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="getAllLinksOnthePage()[pri:3, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:42 IST" name="getAllLinksOnthePage" description="Get all the navigation links" finished-at="2024-12-18T04:43:42 IST" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllLinksOnthePage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:42 IST" name="beforeMethod" finished-at="2024-12-18T04:43:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DisappearingElements.getAllLinksOnthePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:42 IST" name="afterMethod" finished-at="2024-12-18T04:43:52 IST" duration-ms="10119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getAllLinksOnthePage status=SUCCESS method=DisappearingElements.getAllLinksOnthePage()[pri:3, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="clickGallery()[pri:4, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:52 IST" name="clickGallery" description="Click on Gallery if it appears" finished-at="2024-12-18T04:43:54 IST" duration-ms="1405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickGallery -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:52 IST" name="beforeMethod" finished-at="2024-12-18T04:43:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DisappearingElements.clickGallery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:43:54 IST" name="afterMethod" finished-at="2024-12-18T04:44:04 IST" duration-ms="10111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickGallery status=SUCCESS method=DisappearingElements.clickGallery()[pri:4, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="clickGallery()[pri:4, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:44:04 IST" name="clickGallery" description="Click on Gallery if it appears" finished-at="2024-12-18T04:44:05 IST" duration-ms="1286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickGallery -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:44:04 IST" name="beforeMethod" finished-at="2024-12-18T04:44:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DisappearingElements.clickGallery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:44:05 IST" name="afterMethod" finished-at="2024-12-18T04:44:15 IST" duration-ms="10112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickGallery status=SUCCESS method=DisappearingElements.clickGallery()[pri:4, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="clickGallery()[pri:4, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:44:15 IST" name="clickGallery" description="Click on Gallery if it appears" finished-at="2024-12-18T04:44:16 IST" duration-ms="1066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickGallery -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:44:15 IST" name="beforeMethod" finished-at="2024-12-18T04:44:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DisappearingElements.clickGallery()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:44:16 IST" name="afterMethod" finished-at="2024-12-18T04:44:26 IST" duration-ms="10121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickGallery status=SUCCESS method=DisappearingElements.clickGallery()[pri:4, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.DisappearingElements@3fabf088]" started-at="2024-12-18T04:44:26 IST" name="afterClass" finished-at="2024-12-18T04:44:27 IST" duration-ms="880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.DisappearingElements -->
      <class name="com.ui.test.testHeroku.Index">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.Index@6b85300e]" started-at="2024-12-18T04:50:25 IST" name="beforeClass" finished-at="2024-12-18T04:50:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyAllElements()[pri:2, instance:com.ui.test.testHeroku.Index@6b85300e]" started-at="2024-12-18T04:50:25 IST" name="verifyAllElements" description="Verify All Elements" finished-at="2024-12-18T04:50:26 IST" duration-ms="890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllElements -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Index@6b85300e]" started-at="2024-12-18T04:50:25 IST" name="beforeMethod" finished-at="2024-12-18T04:50:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Index.verifyAllElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Index@6b85300e]" started-at="2024-12-18T04:50:26 IST" name="afterMethod" finished-at="2024-12-18T04:50:36 IST" duration-ms="10123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllElements status=SUCCESS method=Index.verifyAllElements()[pri:2, instance:com.ui.test.testHeroku.Index@6b85300e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateABTest()[pri:3, instance:com.ui.test.testHeroku.Index@6b85300e]" started-at="2024-12-18T04:50:36 IST" name="validateABTest" description="Validate A/B Test Link" finished-at="2024-12-18T04:50:37 IST" duration-ms="939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateABTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Index@6b85300e]" started-at="2024-12-18T04:50:36 IST" name="beforeMethod" finished-at="2024-12-18T04:50:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Index.validateABTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Index@6b85300e]" started-at="2024-12-18T04:50:37 IST" name="afterMethod" finished-at="2024-12-18T04:50:47 IST" duration-ms="10123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateABTest status=SUCCESS method=Index.validateABTest()[pri:3, instance:com.ui.test.testHeroku.Index@6b85300e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.Index@6b85300e]" started-at="2024-12-18T04:50:47 IST" name="afterClass" finished-at="2024-12-18T04:50:48 IST" duration-ms="859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.Index -->
      <class name="com.ui.test.testHeroku.AddRemoveEle">
        <test-method is-config="true" signature="config(java.lang.String,java.lang.String)[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:39:57 IST" name="config" finished-at="2024-12-18T04:40:01 IST" duration-ms="3796" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Optional name Automation]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Optional Report]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- config -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:01 IST" name="beforeTest" finished-at="2024-12-18T04:40:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:01 IST" name="beforeClass" finished-at="2024-12-18T04:40:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:01 IST" name="beforeMethod" finished-at="2024-12-18T04:40:01 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.AddRemoveEle.openAddRemoveLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="openAddRemoveLink()[pri:2, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:01 IST" name="openAddRemoveLink" description="Open Add Remove Element link" finished-at="2024-12-18T04:40:01 IST" duration-ms="456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAddRemoveLink -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:01 IST" name="afterMethod" finished-at="2024-12-18T04:40:11 IST" duration-ms="10153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openAddRemoveLink status=SUCCESS method=AddRemoveEle.openAddRemoveLink()[pri:2, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyAddElement()[pri:3, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:11 IST" name="verifyAddElement" description="Verify Add Elemennt" finished-at="2024-12-18T04:40:11 IST" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddElement -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:11 IST" name="beforeMethod" finished-at="2024-12-18T04:40:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.AddRemoveEle.verifyAddElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:11 IST" name="afterMethod" finished-at="2024-12-18T04:40:22 IST" duration-ms="10117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddElement status=SUCCESS method=AddRemoveEle.verifyAddElement()[pri:3, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyRemoveElement()[pri:4, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:22 IST" name="verifyRemoveElement" description="Verify Remove Element" finished-at="2024-12-18T04:40:22 IST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRemoveElement -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:22 IST" name="beforeMethod" finished-at="2024-12-18T04:40:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.AddRemoveEle.verifyRemoveElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:22 IST" name="afterMethod" finished-at="2024-12-18T04:40:32 IST" duration-ms="10102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRemoveElement status=SUCCESS method=AddRemoveEle.verifyRemoveElement()[pri:4, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyMultipleAddElement()[pri:5, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:32 IST" name="verifyMultipleAddElement" description="Verify Multiple Add Elements" finished-at="2024-12-18T04:40:32 IST" duration-ms="580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMultipleAddElement -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:32 IST" name="beforeMethod" finished-at="2024-12-18T04:40:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.AddRemoveEle.verifyMultipleAddElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:32 IST" name="afterMethod" finished-at="2024-12-18T04:40:43 IST" duration-ms="10129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyMultipleAddElement status=SUCCESS method=AddRemoveEle.verifyMultipleAddElement()[pri:5, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:40:43 IST" name="afterClass" finished-at="2024-12-18T04:40:44 IST" duration-ms="1032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.ui.test.testHeroku.AddRemoveEle@28a2a3e7]" started-at="2024-12-18T04:51:11 IST" name="afterSuite" finished-at="2024-12-18T04:51:12 IST" duration-ms="956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.ui.test.testHeroku.AddRemoveEle -->
      <class name="com.ui.test.testHeroku.Checkboxes">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:08 IST" name="beforeClass" finished-at="2024-12-18T04:42:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="openCheckbnoxesPage()[pri:2, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:08 IST" name="openCheckbnoxesPage" description="Open Checkboxes page" finished-at="2024-12-18T04:42:08 IST" duration-ms="442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openCheckbnoxesPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:08 IST" name="beforeMethod" finished-at="2024-12-18T04:42:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Checkboxes.openCheckbnoxesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:08 IST" name="afterMethod" finished-at="2024-12-18T04:42:18 IST" duration-ms="10111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openCheckbnoxesPage status=SUCCESS method=Checkboxes.openCheckbnoxesPage()[pri:2, instance:com.ui.test.testHeroku.Checkboxes@610db97e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateFirstCheckbox()[pri:3, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:18 IST" name="validateFirstCheckbox" description="Validate first Checkboxes is checked or not" finished-at="2024-12-18T04:42:18 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFirstCheckbox -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:18 IST" name="beforeMethod" finished-at="2024-12-18T04:42:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Checkboxes.validateFirstCheckbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:18 IST" name="afterMethod" finished-at="2024-12-18T04:42:28 IST" duration-ms="10106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFirstCheckbox status=SUCCESS method=Checkboxes.validateFirstCheckbox()[pri:3, instance:com.ui.test.testHeroku.Checkboxes@610db97e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateSecondCheckbox()[pri:4, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:28 IST" name="validateSecondCheckbox" description="Validate second Checkboxes is checked or not" finished-at="2024-12-18T04:42:28 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSecondCheckbox -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:28 IST" name="beforeMethod" finished-at="2024-12-18T04:42:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Checkboxes.validateSecondCheckbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:28 IST" name="afterMethod" finished-at="2024-12-18T04:42:39 IST" duration-ms="10123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSecondCheckbox status=SUCCESS method=Checkboxes.validateSecondCheckbox()[pri:4, instance:com.ui.test.testHeroku.Checkboxes@610db97e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateSelectFirstCheckbox()[pri:5, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:39 IST" name="validateSelectFirstCheckbox" description="check the first checbox if it&#039;s not" finished-at="2024-12-18T04:42:39 IST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSelectFirstCheckbox -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:39 IST" name="beforeMethod" finished-at="2024-12-18T04:42:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Checkboxes.validateSelectFirstCheckbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:39 IST" name="afterMethod" finished-at="2024-12-18T04:42:49 IST" duration-ms="10123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSelectFirstCheckbox status=SUCCESS method=Checkboxes.validateSelectFirstCheckbox()[pri:5, instance:com.ui.test.testHeroku.Checkboxes@610db97e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateDeSelectSecondCheckbox()[pri:6, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:49 IST" name="validateDeSelectSecondCheckbox" description="Uncheck the second checbox if it&#039;s not" finished-at="2024-12-18T04:42:49 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeSelectSecondCheckbox -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:49 IST" name="beforeMethod" finished-at="2024-12-18T04:42:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.Checkboxes.validateDeSelectSecondCheckbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:49 IST" name="afterMethod" finished-at="2024-12-18T04:42:59 IST" duration-ms="10119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeSelectSecondCheckbox status=SUCCESS method=Checkboxes.validateDeSelectSecondCheckbox()[pri:6, instance:com.ui.test.testHeroku.Checkboxes@610db97e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.Checkboxes@610db97e]" started-at="2024-12-18T04:42:59 IST" name="afterClass" finished-at="2024-12-18T04:43:00 IST" duration-ms="990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.Checkboxes -->
      <class name="com.ui.test.testHeroku.BasicAuth">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.BasicAuth@24855019]" started-at="2024-12-18T04:40:44 IST" name="beforeClass" finished-at="2024-12-18T04:40:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="validateBasicAuth()[pri:2, instance:com.ui.test.testHeroku.BasicAuth@24855019]" started-at="2024-12-18T04:40:44 IST" name="validateBasicAuth" description="Click on Basic Auth and authenticate the user" finished-at="2024-12-18T04:40:46 IST" duration-ms="2267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBasicAuth -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.BasicAuth@24855019]" started-at="2024-12-18T04:40:44 IST" name="beforeMethod" finished-at="2024-12-18T04:40:44 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.BasicAuth.validateBasicAuth() throws java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.BasicAuth@24855019]" started-at="2024-12-18T04:40:46 IST" name="afterMethod" finished-at="2024-12-18T04:40:56 IST" duration-ms="10120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBasicAuth status=SUCCESS method=BasicAuth.validateBasicAuth()[pri:2, instance:com.ui.test.testHeroku.BasicAuth@24855019] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.BasicAuth@24855019]" started-at="2024-12-18T04:40:56 IST" name="afterClass" finished-at="2024-12-18T04:40:57 IST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.BasicAuth -->
      <class name="com.ui.test.testHeroku.DynamicControls">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:12 IST" name="beforeClass" finished-at="2024-12-18T04:47:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:12 IST" name="beforeMethod" finished-at="2024-12-18T04:47:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicControls.openDynamicControlPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="openDynamicControlPage()[pri:2, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:12 IST" name="openDynamicControlPage" description="Open Dynamic Controls page" finished-at="2024-12-18T04:47:13 IST" duration-ms="561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDynamicControlPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:13 IST" name="afterMethod" finished-at="2024-12-18T04:47:23 IST" duration-ms="10110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openDynamicControlPage status=SUCCESS method=DynamicControls.openDynamicControlPage()[pri:2, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="addRemoveCheckbox()[pri:3, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:23 IST" name="addRemoveCheckbox" description="Add/Remove checkbox and validate message" finished-at="2024-12-18T04:47:26 IST" duration-ms="3343" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [It's back!] but found [It's gone!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [It's back!] but found [It's gone!]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.ui.test.testHeroku.DynamicControls.addRemoveCheckbox(DynamicControls.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemoveCheckbox -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:23 IST" name="beforeMethod" finished-at="2024-12-18T04:47:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicControls.addRemoveCheckbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:26 IST" name="afterMethod" finished-at="2024-12-18T04:47:36 IST" duration-ms="10121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addRemoveCheckbox status=FAILURE method=DynamicControls.addRemoveCheckbox()[pri:3, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="addRemoveCheckbox()[pri:3, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:36 IST" name="addRemoveCheckbox" description="Add/Remove checkbox and validate message" finished-at="2024-12-18T04:47:40 IST" duration-ms="3429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addRemoveCheckbox -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:36 IST" name="beforeMethod" finished-at="2024-12-18T04:47:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicControls.addRemoveCheckbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:40 IST" name="afterMethod" finished-at="2024-12-18T04:47:50 IST" duration-ms="10130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addRemoveCheckbox status=SUCCESS method=DynamicControls.addRemoveCheckbox()[pri:3, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="enableDisableTextBox()[pri:4, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:50 IST" name="enableDisableTextBox" description="Enable/Disable input field and validate message" finished-at="2024-12-18T04:47:53 IST" duration-ms="3321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enableDisableTextBox -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:50 IST" name="beforeMethod" finished-at="2024-12-18T04:47:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicControls.enableDisableTextBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:47:53 IST" name="afterMethod" finished-at="2024-12-18T04:48:03 IST" duration-ms="10132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enableDisableTextBox status=SUCCESS method=DynamicControls.enableDisableTextBox()[pri:4, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="enableDisableTextBox()[pri:4, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:48:03 IST" name="enableDisableTextBox" description="Enable/Disable input field and validate message" finished-at="2024-12-18T04:48:07 IST" duration-ms="3296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enableDisableTextBox -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:48:03 IST" name="beforeMethod" finished-at="2024-12-18T04:48:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicControls.enableDisableTextBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:48:07 IST" name="afterMethod" finished-at="2024-12-18T04:48:17 IST" duration-ms="10107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enableDisableTextBox status=SUCCESS method=DynamicControls.enableDisableTextBox()[pri:4, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="inputTextinTextbox()[pri:5, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:48:17 IST" name="inputTextinTextbox" description="Input something in textbox" finished-at="2024-12-18T04:48:17 IST" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputTextinTextbox -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:48:17 IST" name="beforeMethod" finished-at="2024-12-18T04:48:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicControls.inputTextinTextbox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:48:17 IST" name="afterMethod" finished-at="2024-12-18T04:48:27 IST" duration-ms="10120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=inputTextinTextbox status=SUCCESS method=DynamicControls.inputTextinTextbox()[pri:5, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.DynamicControls@7bd69e82]" started-at="2024-12-18T04:48:27 IST" name="afterClass" finished-at="2024-12-18T04:48:28 IST" duration-ms="1218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.DynamicControls -->
      <class name="com.ui.test.testHeroku.ExitIntent">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:49:53 IST" name="beforeMethod" finished-at="2024-12-18T04:49:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ExitIntent.openExitIntentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:49:53 IST" name="beforeClass" finished-at="2024-12-18T04:49:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="openExitIntentPage()[pri:2, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:49:53 IST" name="openExitIntentPage" description="Open Exit Intent page" finished-at="2024-12-18T04:49:54 IST" duration-ms="703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openExitIntentPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:49:54 IST" name="afterMethod" finished-at="2024-12-18T04:50:04 IST" duration-ms="10122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openExitIntentPage status=SUCCESS method=ExitIntent.openExitIntentPage()[pri:2, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateIntentOnMouseOutOfViewPort()[pri:3, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:50:04 IST" name="validateIntentOnMouseOutOfViewPort" description="Validate to open intent on taking mouse out of view port of browser" finished-at="2024-12-18T04:50:04 IST" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIntentOnMouseOutOfViewPort -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:50:04 IST" name="beforeMethod" finished-at="2024-12-18T04:50:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ExitIntent.validateIntentOnMouseOutOfViewPort() throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:50:04 IST" name="afterMethod" finished-at="2024-12-18T04:50:14 IST" duration-ms="10110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntentOnMouseOutOfViewPort status=SUCCESS method=ExitIntent.validateIntentOnMouseOutOfViewPort()[pri:3, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateCloseIntent()[pri:4, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:50:14 IST" name="validateCloseIntent" description="Validate to close the intent which opened on taking mouse out of view port of browser" finished-at="2024-12-18T04:50:14 IST" depends-on-methods="com.ui.test.testHeroku.ExitIntent.validateIntentOnMouseOutOfViewPort" duration-ms="80" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCloseIntent -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:50:14 IST" name="beforeMethod" finished-at="2024-12-18T04:50:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ExitIntent.validateCloseIntent() throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:50:14 IST" name="afterMethod" finished-at="2024-12-18T04:50:24 IST" duration-ms="10100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCloseIntent status=SUCCESS method=ExitIntent.validateCloseIntent()[pri:4, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.ExitIntent@27dc79f7]" started-at="2024-12-18T04:50:24 IST" name="afterClass" finished-at="2024-12-18T04:50:25 IST" duration-ms="933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.ExitIntent -->
      <class name="com.ui.test.testHeroku.DragNDrop">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:44:50 IST" name="beforeClass" finished-at="2024-12-18T04:44:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="openDragNDropPages()[pri:2, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:44:50 IST" name="openDragNDropPages" description="Open Drag and Drop page" finished-at="2024-12-18T04:44:50 IST" duration-ms="443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDragNDropPages -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:44:50 IST" name="beforeMethod" finished-at="2024-12-18T04:44:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DragNDrop.openDragNDropPages()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:44:50 IST" name="afterMethod" finished-at="2024-12-18T04:45:00 IST" duration-ms="10107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openDragNDropPages status=SUCCESS method=DragNDrop.openDragNDropPages()[pri:2, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="dragBoxAtoBoxB()[pri:3, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:45:00 IST" name="dragBoxAtoBoxB" description="Drag box A to box B" finished-at="2024-12-18T04:45:02 IST" duration-ms="1273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragBoxAtoBoxB -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:45:00 IST" name="beforeMethod" finished-at="2024-12-18T04:45:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DragNDrop.dragBoxAtoBoxB()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:45:02 IST" name="afterMethod" finished-at="2024-12-18T04:45:12 IST" duration-ms="10120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragBoxAtoBoxB status=SUCCESS method=DragNDrop.dragBoxAtoBoxB()[pri:3, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="dragBoxBtoBoxA()[pri:4, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:45:12 IST" name="dragBoxBtoBoxA" description="Drag box B to box A" finished-at="2024-12-18T04:45:12 IST" duration-ms="376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragBoxBtoBoxA -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:45:12 IST" name="beforeMethod" finished-at="2024-12-18T04:45:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DragNDrop.dragBoxBtoBoxA()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:45:12 IST" name="afterMethod" finished-at="2024-12-18T04:45:22 IST" duration-ms="10109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragBoxBtoBoxA status=SUCCESS method=DragNDrop.dragBoxBtoBoxA()[pri:4, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.DragNDrop@12f3afb5]" started-at="2024-12-18T04:45:22 IST" name="afterClass" finished-at="2024-12-18T04:45:23 IST" duration-ms="1090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.DragNDrop -->
      <class name="com.ui.test.testHeroku.ContextMenu">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:00 IST" name="beforeMethod" finished-at="2024-12-18T04:43:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ContextMenu.openCheckbnoxesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:00 IST" name="beforeClass" finished-at="2024-12-18T04:43:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="openCheckbnoxesPage()[pri:2, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:00 IST" name="openCheckbnoxesPage" description="Open Context Menu page" finished-at="2024-12-18T04:43:00 IST" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openCheckbnoxesPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:00 IST" name="afterMethod" finished-at="2024-12-18T04:43:10 IST" duration-ms="10130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openCheckbnoxesPage status=SUCCESS method=ContextMenu.openCheckbnoxesPage()[pri:2, instance:com.ui.test.testHeroku.ContextMenu@6f0628de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="clickContextMenu()[pri:3, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:10 IST" name="clickContextMenu" description="Right click on the div" finished-at="2024-12-18T04:43:11 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickContextMenu -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:10 IST" name="beforeMethod" finished-at="2024-12-18T04:43:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ContextMenu.clickContextMenu() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:11 IST" name="afterMethod" finished-at="2024-12-18T04:43:21 IST" duration-ms="10099" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickContextMenu status=SUCCESS method=ContextMenu.clickContextMenu()[pri:3, instance:com.ui.test.testHeroku.ContextMenu@6f0628de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="clickBackOnContextMenu()[pri:4, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:21 IST" name="clickBackOnContextMenu" description="Navigate back by click on back on the context menu" finished-at="2024-12-18T04:43:21 IST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickBackOnContextMenu -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:21 IST" name="beforeMethod" finished-at="2024-12-18T04:43:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.ContextMenu.clickBackOnContextMenu() throws java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:21 IST" name="afterMethod" finished-at="2024-12-18T04:43:31 IST" duration-ms="10119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickBackOnContextMenu status=SUCCESS method=ContextMenu.clickBackOnContextMenu()[pri:4, instance:com.ui.test.testHeroku.ContextMenu@6f0628de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.ContextMenu@6f0628de]" started-at="2024-12-18T04:43:31 IST" name="afterClass" finished-at="2024-12-18T04:43:31 IST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.ContextMenu -->
      <class name="com.ui.test.testHeroku.BrokenImages">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.BrokenImages@3abd581e]" started-at="2024-12-18T04:40:57 IST" name="beforeClass" finished-at="2024-12-18T04:40:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.BrokenImages@3abd581e]" started-at="2024-12-18T04:40:57 IST" name="beforeMethod" finished-at="2024-12-18T04:40:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.BrokenImages.openPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="openPage()[pri:2, instance:com.ui.test.testHeroku.BrokenImages@3abd581e]" started-at="2024-12-18T04:40:57 IST" name="openPage" description="Open the Broken Images Page" finished-at="2024-12-18T04:40:58 IST" duration-ms="1010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.BrokenImages@3abd581e]" started-at="2024-12-18T04:40:58 IST" name="afterMethod" finished-at="2024-12-18T04:41:08 IST" duration-ms="10127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openPage status=SUCCESS method=BrokenImages.openPage()[pri:2, instance:com.ui.test.testHeroku.BrokenImages@3abd581e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateImageStatus()[pri:3, instance:com.ui.test.testHeroku.BrokenImages@3abd581e]" started-at="2024-12-18T04:41:08 IST" name="validateImageStatus" description="Validate broken and clear images" finished-at="2024-12-18T04:41:10 IST" duration-ms="2076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImageStatus -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.BrokenImages@3abd581e]" started-at="2024-12-18T04:41:08 IST" name="beforeMethod" finished-at="2024-12-18T04:41:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.BrokenImages.validateImageStatus()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.BrokenImages@3abd581e]" started-at="2024-12-18T04:41:10 IST" name="afterMethod" finished-at="2024-12-18T04:41:20 IST" duration-ms="10123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImageStatus status=SUCCESS method=BrokenImages.validateImageStatus()[pri:3, instance:com.ui.test.testHeroku.BrokenImages@3abd581e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.BrokenImages@3abd581e]" started-at="2024-12-18T04:41:20 IST" name="afterClass" finished-at="2024-12-18T04:41:21 IST" duration-ms="878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.BrokenImages -->
      <class name="com.ui.test.testHeroku.DynamicContent">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:45:55 IST" name="beforeClass" finished-at="2024-12-18T04:45:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="openDynamicContentPage()[pri:2, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:45:55 IST" name="openDynamicContentPage" description="Open Dynamic Content page" finished-at="2024-12-18T04:45:56 IST" duration-ms="920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDynamicContentPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:45:55 IST" name="beforeMethod" finished-at="2024-12-18T04:45:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicContent.openDynamicContentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:45:56 IST" name="afterMethod" finished-at="2024-12-18T04:46:06 IST" duration-ms="10119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openDynamicContentPage status=SUCCESS method=DynamicContent.openDynamicContentPage()[pri:2, instance:com.ui.test.testHeroku.DynamicContent@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateImagefromFirstRow()[pri:3, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:06 IST" name="validateImagefromFirstRow" description="Validate Image from first row" finished-at="2024-12-18T04:46:07 IST" duration-ms="589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImagefromFirstRow -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:06 IST" name="beforeMethod" finished-at="2024-12-18T04:46:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicContent.validateImagefromFirstRow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:07 IST" name="afterMethod" finished-at="2024-12-18T04:46:17 IST" duration-ms="10119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImagefromFirstRow status=SUCCESS method=DynamicContent.validateImagefromFirstRow()[pri:3, instance:com.ui.test.testHeroku.DynamicContent@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateTextfromFirstRow()[pri:4, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:17 IST" name="validateTextfromFirstRow" description="Validate Text from first row" finished-at="2024-12-18T04:46:18 IST" duration-ms="592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTextfromFirstRow -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:17 IST" name="beforeMethod" finished-at="2024-12-18T04:46:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicContent.validateTextfromFirstRow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:18 IST" name="afterMethod" finished-at="2024-12-18T04:46:28 IST" duration-ms="10121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTextfromFirstRow status=SUCCESS method=DynamicContent.validateTextfromFirstRow()[pri:4, instance:com.ui.test.testHeroku.DynamicContent@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:28 IST" name="beforeMethod" finished-at="2024-12-18T04:46:28 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicContent.validateImagefromSecondRow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateImagefromSecondRow()[pri:5, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:28 IST" name="validateImagefromSecondRow" description="Validate Image from Second row" finished-at="2024-12-18T04:46:28 IST" duration-ms="598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImagefromSecondRow -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:28 IST" name="afterMethod" finished-at="2024-12-18T04:46:38 IST" duration-ms="10110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImagefromSecondRow status=SUCCESS method=DynamicContent.validateImagefromSecondRow()[pri:5, instance:com.ui.test.testHeroku.DynamicContent@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateTextfromSecondRow()[pri:6, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:38 IST" name="validateTextfromSecondRow" description="Validate Text from second row" finished-at="2024-12-18T04:46:39 IST" duration-ms="622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTextfromSecondRow -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:38 IST" name="beforeMethod" finished-at="2024-12-18T04:46:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicContent.validateTextfromSecondRow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:39 IST" name="afterMethod" finished-at="2024-12-18T04:46:49 IST" duration-ms="10128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTextfromSecondRow status=SUCCESS method=DynamicContent.validateTextfromSecondRow()[pri:6, instance:com.ui.test.testHeroku.DynamicContent@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateImagefromThirdRow()[pri:7, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:49 IST" name="validateImagefromThirdRow" description="Validate Image from third row" finished-at="2024-12-18T04:46:50 IST" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImagefromThirdRow -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:49 IST" name="beforeMethod" finished-at="2024-12-18T04:46:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicContent.validateImagefromThirdRow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:46:50 IST" name="afterMethod" finished-at="2024-12-18T04:47:00 IST" duration-ms="10116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImagefromThirdRow status=SUCCESS method=DynamicContent.validateImagefromThirdRow()[pri:7, instance:com.ui.test.testHeroku.DynamicContent@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateTextfromThirdRow()[pri:8, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:47:00 IST" name="validateTextfromThirdRow" description="Validate Text from third row" finished-at="2024-12-18T04:47:00 IST" duration-ms="589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTextfromThirdRow -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:47:00 IST" name="beforeMethod" finished-at="2024-12-18T04:47:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicContent.validateTextfromThirdRow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:47:00 IST" name="afterMethod" finished-at="2024-12-18T04:47:11 IST" duration-ms="10127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTextfromThirdRow status=SUCCESS method=DynamicContent.validateTextfromThirdRow()[pri:8, instance:com.ui.test.testHeroku.DynamicContent@2c22a348] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.DynamicContent@2c22a348]" started-at="2024-12-18T04:47:11 IST" name="afterClass" finished-at="2024-12-18T04:47:12 IST" duration-ms="1459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.DynamicContent -->
      <class name="com.ui.test.testHeroku.DownloadFile">
        <test-method signature="openExitIntentPage()[pri:2, instance:com.ui.test.testHeroku.DownloadFile@1e392345]" started-at="2024-12-18T04:44:27 IST" name="openExitIntentPage" description="Open Download File page" finished-at="2024-12-18T04:44:28 IST" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openExitIntentPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DownloadFile@1e392345]" started-at="2024-12-18T04:44:27 IST" name="beforeMethod" finished-at="2024-12-18T04:44:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DownloadFile.openExitIntentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.DownloadFile@1e392345]" started-at="2024-12-18T04:44:27 IST" name="beforeClass" finished-at="2024-12-18T04:44:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DownloadFile@1e392345]" started-at="2024-12-18T04:44:28 IST" name="afterMethod" finished-at="2024-12-18T04:44:38 IST" duration-ms="10100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openExitIntentPage status=SUCCESS method=DownloadFile.openExitIntentPage()[pri:2, instance:com.ui.test.testHeroku.DownloadFile@1e392345] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="downloadFile()[pri:3, instance:com.ui.test.testHeroku.DownloadFile@1e392345]" started-at="2024-12-18T04:44:38 IST" name="downloadFile" description="Download a file from the page" finished-at="2024-12-18T04:44:39 IST" duration-ms="970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadFile -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DownloadFile@1e392345]" started-at="2024-12-18T04:44:38 IST" name="beforeMethod" finished-at="2024-12-18T04:44:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DownloadFile.downloadFile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DownloadFile@1e392345]" started-at="2024-12-18T04:44:39 IST" name="afterMethod" finished-at="2024-12-18T04:44:49 IST" duration-ms="10102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadFile status=SUCCESS method=DownloadFile.downloadFile()[pri:3, instance:com.ui.test.testHeroku.DownloadFile@1e392345] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.DownloadFile@1e392345]" started-at="2024-12-18T04:44:49 IST" name="afterClass" finished-at="2024-12-18T04:44:50 IST" duration-ms="877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.DownloadFile -->
      <class name="com.ui.test.testHeroku.DynamicLoading">
        <test-method signature="openDynamicContentPage()[pri:2, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:28 IST" name="openDynamicContentPage" description="Open Dynamic Loading page" finished-at="2024-12-18T04:48:28 IST" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDynamicContentPage -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:28 IST" name="beforeClass" finished-at="2024-12-18T04:48:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:28 IST" name="beforeMethod" finished-at="2024-12-18T04:48:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicLoading.openDynamicContentPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:28 IST" name="afterMethod" finished-at="2024-12-18T04:48:39 IST" duration-ms="10105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openDynamicContentPage status=SUCCESS method=DynamicLoading.openDynamicContentPage()[pri:2, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateFirstLinkOnPage()[pri:3, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:39 IST" name="validateFirstLinkOnPage" description="Validate the first link of dynamic loading page" finished-at="2024-12-18T04:48:40 IST" duration-ms="1046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFirstLinkOnPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:39 IST" name="beforeMethod" finished-at="2024-12-18T04:48:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicLoading.validateFirstLinkOnPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:40 IST" name="afterMethod" finished-at="2024-12-18T04:48:50 IST" duration-ms="10122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFirstLinkOnPage status=SUCCESS method=DynamicLoading.validateFirstLinkOnPage()[pri:3, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateStartBtnfromFirstLink()[pri:4, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:50 IST" name="validateStartBtnfromFirstLink" description="Validate Start button on the first link of dynamic loading" finished-at="2024-12-18T04:48:50 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStartBtnfromFirstLink -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:50 IST" name="beforeMethod" finished-at="2024-12-18T04:48:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicLoading.validateStartBtnfromFirstLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:48:50 IST" name="afterMethod" finished-at="2024-12-18T04:49:00 IST" duration-ms="10110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateStartBtnfromFirstLink status=SUCCESS method=DynamicLoading.validateStartBtnfromFirstLink()[pri:4, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fetchHiddenTextOnPage()[pri:5, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:00 IST" name="fetchHiddenTextOnPage" description="Validate hidden text on click of Start btn on the first link" finished-at="2024-12-18T04:49:05 IST" depends-on-methods="com.ui.test.testHeroku.DynamicLoading.validateStartBtnfromFirstLink" duration-ms="5488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchHiddenTextOnPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:00 IST" name="beforeMethod" finished-at="2024-12-18T04:49:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicLoading.fetchHiddenTextOnPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:05 IST" name="afterMethod" finished-at="2024-12-18T04:49:15 IST" duration-ms="10102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fetchHiddenTextOnPage status=SUCCESS method=DynamicLoading.fetchHiddenTextOnPage()[pri:5, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateSecondLinkOnPage()[pri:6, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:15 IST" name="validateSecondLinkOnPage" description="Validate the second link of dynamic loading page" finished-at="2024-12-18T04:49:16 IST" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSecondLinkOnPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:15 IST" name="beforeMethod" finished-at="2024-12-18T04:49:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicLoading.validateSecondLinkOnPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:16 IST" name="afterMethod" finished-at="2024-12-18T04:49:26 IST" duration-ms="10084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSecondLinkOnPage status=SUCCESS method=DynamicLoading.validateSecondLinkOnPage()[pri:6, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateStartBtnfromSecondLink()[pri:7, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:26 IST" name="validateStartBtnfromSecondLink" description="Validate Start button on the second link of dynamic loading" finished-at="2024-12-18T04:49:27 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStartBtnfromSecondLink -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:26 IST" name="beforeMethod" finished-at="2024-12-18T04:49:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicLoading.validateStartBtnfromSecondLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:27 IST" name="afterMethod" finished-at="2024-12-18T04:49:37 IST" duration-ms="10112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateStartBtnfromSecondLink status=SUCCESS method=DynamicLoading.validateStartBtnfromSecondLink()[pri:7, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fetchHiddenTextOnPageAfterItRendered()[pri:8, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:37 IST" name="fetchHiddenTextOnPageAfterItRendered" description="Validate rendered text on click of Start btn on the second link" finished-at="2024-12-18T04:49:42 IST" depends-on-methods="com.ui.test.testHeroku.DynamicLoading.validateStartBtnfromSecondLink" duration-ms="5399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchHiddenTextOnPageAfterItRendered -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:37 IST" name="beforeMethod" finished-at="2024-12-18T04:49:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ui.test.testHeroku.DynamicLoading.fetchHiddenTextOnPageAfterItRendered()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:42 IST" name="afterMethod" finished-at="2024-12-18T04:49:52 IST" duration-ms="10110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fetchHiddenTextOnPageAfterItRendered status=SUCCESS method=DynamicLoading.fetchHiddenTextOnPageAfterItRendered()[pri:8, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.ui.test.testHeroku.DynamicLoading@6831d8fd]" started-at="2024-12-18T04:49:52 IST" name="afterClass" finished-at="2024-12-18T04:49:53 IST" duration-ms="973" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.ui.test.testHeroku.DynamicLoading -->
    </test> <!-- Regression -->
  </suite> <!-- SeleniumControls : RegressionTest -->
</testng-results>
